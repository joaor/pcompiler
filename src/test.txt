PROGRAM strings3 (output); { Extended Pascal examples } { Schematic string parameters and 'domains' } TYPE stringp = ^string; VAR p1,p2: stringp; FUNCTION ps (s: string) = p: stringp; { Function ps takes a general string parameter, obtains space in the heap to fit a string of the length of the parameter, copies the parameter into the heap and returns the pointer } { The named function result avoids the need for a work variable } BEGIN new(p,length(s)); p^ := s; END {ps}; BEGIN {program} p1 := ps('A model jet-ski'); p2 := ps('the ideal bath companion'); writeln(p1^,' is (some say) ',p2^); dispose(p1); { removes model from heap } END. { Generated output is: A model jet-ski is (some say) the ideal bath companion } { ------------------------------------------ }
